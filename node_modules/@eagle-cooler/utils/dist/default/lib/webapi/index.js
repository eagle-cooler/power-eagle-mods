"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _class;
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var EagleApi = /*#__PURE__*/function () {
  function EagleApi() {
    _classCallCheck(this, EagleApi);
  }
  _createClass(EagleApi, null, [{
    key: "_internalGetToken",
    value: function () {
      var _internalGetToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var res, raw, token;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!EagleApi.token) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return", EagleApi.token);
            case 2:
              _context.prev = 2;
              _context.next = 5;
              return fetch('http://localhost:41595/api/application/info');
            case 5:
              res = _context.sent;
              if (res) {
                _context.next = 8;
                break;
              }
              throw new Error('No response from Eagle');
            case 8:
              _context.next = 10;
              return res.json();
            case 10:
              raw = _context.sent;
              token = raw.data.preferences.developer.apiToken;
              if (!token) {
                _context.next = 15;
                break;
              }
              EagleApi.token = token;
              return _context.abrupt("return", token);
            case 15:
              _context.next = 20;
              break;
            case 17:
              _context.prev = 17;
              _context.t0 = _context["catch"](2);
              console.error(_context.t0);
            case 20:
              return _context.abrupt("return", null);
            case 21:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[2, 17]]);
      }));
      function _internalGetToken() {
        return _internalGetToken2.apply(this, arguments);
      }
      return _internalGetToken;
    }()
  }, {
    key: "_internalRequest",
    value: function () {
      var _internalRequest2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(path, methodname) {
        var data,
          params,
          token,
          url,
          response,
          json,
          _args2 = arguments;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              data = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : null;
              params = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : null;
              _context2.next = 4;
              return EagleApi._internalGetToken();
            case 4:
              token = _context2.sent;
              if (token) {
                _context2.next = 7;
                break;
              }
              throw new Error('No token found');
            case 7:
              url = "http://localhost:41595/api/".concat(path, "?token=").concat(token);
              if (params) {
                params = Object.fromEntries(Object.entries(params).filter(function (_ref) {
                  var _ref2 = _slicedToArray(_ref, 2),
                    v = _ref2[1];
                  return v !== null;
                }));
                url += '&' + Object.entries(params).map(function (_ref3) {
                  var _ref4 = _slicedToArray(_ref3, 2),
                    k = _ref4[0],
                    v = _ref4[1];
                  return "".concat(k, "=").concat(v);
                }).join('&');
              }
              if (methodname === 'POST' && data) {
                data = Object.fromEntries(Object.entries(data).filter(function (_ref5) {
                  var _ref6 = _slicedToArray(_ref5, 2),
                    v = _ref6[1];
                  return v !== null;
                }));
              }
              _context2.prev = 10;
              _context2.next = 13;
              return fetch(url, methodname === 'POST' ? {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
              } : undefined);
            case 13:
              response = _context2.sent;
              _context2.next = 16;
              return response.json();
            case 16:
              json = _context2.sent;
              return _context2.abrupt("return", json.data);
            case 20:
              _context2.prev = 20;
              _context2.t0 = _context2["catch"](10);
              console.error('Request failed:', _context2.t0);
              throw _context2.t0;
            case 24:
            case "end":
              return _context2.stop();
          }
        }, _callee2, null, [[10, 20]]);
      }));
      function _internalRequest(_x, _x2) {
        return _internalRequest2.apply(this, arguments);
      }
      return _internalRequest;
    }()
  }]);
  return EagleApi;
}();
_class = EagleApi;
_defineProperty(EagleApi, "token", null);
_defineProperty(EagleApi, "application", /*#__PURE__*/function () {
  function _class2() {
    _classCallCheck(this, _class2);
  }
  _createClass(_class2, null, [{
    key: "info",
    value: function info() {
      return _class._internalRequest('application/info', 'GET');
    }
  }]);
  return _class2;
}());
_defineProperty(EagleApi, "folder", /*#__PURE__*/function () {
  function _class3() {
    _classCallCheck(this, _class3);
  }
  _createClass(_class3, null, [{
    key: "create",
    value: function create(name) {
      var parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      return _class._internalRequest('folder/create', 'POST', {
        folderName: name,
        parent: parentId
      }).then(function (data) {
        return data;
      });
    }
  }, {
    key: "rename",
    value: function rename(folderId, newName) {
      return _class._internalRequest('folder/rename', 'POST', {
        folderId: folderId,
        newName: newName
      });
    }
  }, {
    key: "update",
    value: function update(_ref7) {
      var folderId = _ref7.folderId,
        _ref7$newName = _ref7.newName,
        newName = _ref7$newName === void 0 ? null : _ref7$newName,
        _ref7$newDescription = _ref7.newDescription,
        newDescription = _ref7$newDescription === void 0 ? null : _ref7$newDescription,
        _ref7$newColor = _ref7.newColor,
        newColor = _ref7$newColor === void 0 ? null : _ref7$newColor;
      return _class._internalRequest('folder/update', 'POST', {
        folderId: folderId,
        newName: newName,
        newDescription: newDescription,
        newColor: newColor
      });
    }
  }, {
    key: "list",
    value: function list() {
      return _class._internalRequest('folder/list', 'GET');
    }
  }, {
    key: "listRecent",
    value: function listRecent() {
      return _class._internalRequest('folder/listRecent', 'GET');
    }
  }]);
  return _class3;
}());
_defineProperty(EagleApi, "library", /*#__PURE__*/function () {
  function _class4() {
    _classCallCheck(this, _class4);
  }
  _createClass(_class4, null, [{
    key: "info",
    value: function info() {
      return _class._internalRequest('library/info', 'GET');
    }
  }, {
    key: "history",
    value: function history() {
      return _class._internalRequest('library/history', 'GET');
    }
  }, {
    key: "switch",
    value: function _switch(libraryPath) {
      return _class._internalRequest('library/switch', 'POST', {
        libraryPath: libraryPath
      });
    }
  }, {
    key: "icon",
    value: function icon(libraryPath) {
      return _class._internalRequest('library/icon', 'GET', null, {
        libraryPath: libraryPath
      });
    }
  }]);
  return _class4;
}());
_defineProperty(EagleApi, "item", /*#__PURE__*/function () {
  function _class5() {
    _classCallCheck(this, _class5);
  }
  _createClass(_class5, null, [{
    key: "update",
    value: function update(_ref8) {
      var itemId = _ref8.itemId,
        _ref8$tags = _ref8.tags,
        tags = _ref8$tags === void 0 ? null : _ref8$tags,
        _ref8$annotation = _ref8.annotation,
        annotation = _ref8$annotation === void 0 ? null : _ref8$annotation,
        _ref8$url = _ref8.url,
        url = _ref8$url === void 0 ? null : _ref8$url,
        _ref8$star = _ref8.star,
        star = _ref8$star === void 0 ? null : _ref8$star;
      return _class._internalRequest('item/update', 'POST', {
        id: itemId,
        tags: tags,
        annotation: annotation,
        url: url,
        star: star
      });
    }
  }, {
    key: "refreshThumbnail",
    value: function refreshThumbnail(itemId) {
      return _class._internalRequest('item/refreshThumbnail', 'POST', {
        id: itemId
      });
    }
  }, {
    key: "refreshPalette",
    value: function refreshPalette(itemId) {
      return _class._internalRequest('item/refreshPalette', 'POST', {
        id: itemId
      });
    }
  }, {
    key: "moveToTrash",
    value: function moveToTrash(itemIds) {
      return _class._internalRequest('item/moveToTrash', 'POST', {
        itemIds: itemIds
      });
    }
  }, {
    key: "list",
    value: function list(_ref9) {
      var _ref9$limit = _ref9.limit,
        limit = _ref9$limit === void 0 ? 200 : _ref9$limit,
        _ref9$offset = _ref9.offset,
        offset = _ref9$offset === void 0 ? 0 : _ref9$offset,
        _ref9$orderBy = _ref9.orderBy,
        orderBy = _ref9$orderBy === void 0 ? null : _ref9$orderBy,
        _ref9$keyword = _ref9.keyword,
        keyword = _ref9$keyword === void 0 ? null : _ref9$keyword,
        _ref9$ext = _ref9.ext,
        ext = _ref9$ext === void 0 ? null : _ref9$ext,
        _ref9$tags = _ref9.tags,
        tags = _ref9$tags === void 0 ? null : _ref9$tags,
        _ref9$folders = _ref9.folders,
        folders = _ref9$folders === void 0 ? null : _ref9$folders;
      return _class._internalRequest('item/list', 'GET', null, {
        limit: limit,
        offset: offset,
        orderBy: orderBy,
        keyword: keyword,
        ext: ext,
        tags: tags,
        folders: folders
      });
    }
  }, {
    key: "getThumbnail",
    value: function getThumbnail(itemId) {
      return _class._internalRequest('item/thumbnail', 'GET', null, {
        id: itemId
      });
    }
  }, {
    key: "getInfo",
    value: function getInfo(itemId) {
      return _class._internalRequest('item/info', 'GET', null, {
        id: itemId
      });
    }
  }, {
    key: "addBookmark",
    value: function addBookmark(_ref10) {
      var url = _ref10.url,
        name = _ref10.name,
        _ref10$base = _ref10.base64,
        base64 = _ref10$base === void 0 ? null : _ref10$base,
        _ref10$tags = _ref10.tags,
        tags = _ref10$tags === void 0 ? null : _ref10$tags,
        _ref10$modificationTi = _ref10.modificationTime,
        modificationTime = _ref10$modificationTi === void 0 ? null : _ref10$modificationTi,
        _ref10$folderId = _ref10.folderId,
        folderId = _ref10$folderId === void 0 ? null : _ref10$folderId;
      return _class._internalRequest('item/addBookmark', 'POST', {
        url: url,
        name: name,
        base64: base64,
        tags: tags,
        modificationTime: modificationTime,
        folderId: folderId
      });
    }
  }, {
    key: "addFromUrl",
    value: function addFromUrl(_ref11) {
      var url = _ref11.url,
        name = _ref11.name,
        _ref11$website = _ref11.website,
        website = _ref11$website === void 0 ? null : _ref11$website,
        _ref11$tags = _ref11.tags,
        tags = _ref11$tags === void 0 ? null : _ref11$tags,
        _ref11$star = _ref11.star,
        star = _ref11$star === void 0 ? null : _ref11$star,
        _ref11$annotation = _ref11.annotation,
        annotation = _ref11$annotation === void 0 ? null : _ref11$annotation,
        _ref11$modificationTi = _ref11.modificationTime,
        modificationTime = _ref11$modificationTi === void 0 ? null : _ref11$modificationTi,
        _ref11$folderId = _ref11.folderId,
        folderId = _ref11$folderId === void 0 ? null : _ref11$folderId,
        _ref11$headers = _ref11.headers,
        headers = _ref11$headers === void 0 ? null : _ref11$headers;
      return _class._internalRequest('item/addFromUrl', 'POST', {
        url: url,
        name: name,
        website: website,
        tags: tags,
        star: star,
        annotation: annotation,
        modificationTime: modificationTime,
        folderId: folderId,
        headers: headers
      });
    }
  }, {
    key: "addFromPath",
    value: function addFromPath(_ref12) {
      var path = _ref12.path,
        name = _ref12.name,
        _ref12$website = _ref12.website,
        website = _ref12$website === void 0 ? null : _ref12$website,
        _ref12$annotation = _ref12.annotation,
        annotation = _ref12$annotation === void 0 ? null : _ref12$annotation,
        _ref12$tags = _ref12.tags,
        tags = _ref12$tags === void 0 ? null : _ref12$tags,
        _ref12$folderId = _ref12.folderId,
        folderId = _ref12$folderId === void 0 ? null : _ref12$folderId;
      return _class._internalRequest('item/addFromPath', 'POST', {
        path: path,
        name: name,
        website: website,
        annotation: annotation,
        tags: tags,
        folderId: folderId
      });
    }
  }, {
    key: "addFromURLs",
    value: function addFromURLs(_ref13) {
      var items = _ref13.items,
        _ref13$folderId = _ref13.folderId,
        folderId = _ref13$folderId === void 0 ? null : _ref13$folderId;
      return _class._internalRequest('item/addFromURLs', 'POST', {
        items: items,
        folderId: folderId
      });
    }
  }]);
  return _class5;
}());
var _default = exports["default"] = EagleApi;