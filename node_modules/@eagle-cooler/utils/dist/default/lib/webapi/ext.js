"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _index = _interopRequireDefault(require("./index.js"));
var _path = _interopRequireDefault(require("path"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var EagleApiExt = /*#__PURE__*/function () {
  function EagleApiExt() {
    _classCallCheck(this, EagleApiExt);
  }
  _createClass(EagleApiExt, null, [{
    key: "closestLibrary",
    value: function closestLibrary(libraryName) {
      var _this = this;
      return _index["default"].library.history().then(function (histories) {
        var names = histories.map(function (history) {
          return [_path["default"].basename(history).replace('.library', ''), history];
        });

        // Calculate similarity scores using Levenshtein distance
        var scores = {};
        var _iterator = _createForOfIteratorHelper(names),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var _step$value = _slicedToArray(_step.value, 2),
              name = _step$value[0],
              fullpath = _step$value[1];
            scores[fullpath] = _this._calculateSimilarity(libraryName, name);
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
        return scores;
      });
    }
  }, {
    key: "_calculateSimilarity",
    value: function _calculateSimilarity(a, b) {
      a = a.toLowerCase();
      b = b.toLowerCase();
      var matrix = [];
      for (var i = 0; i <= b.length; i++) {
        matrix[i] = [i];
      }
      for (var j = 0; j <= a.length; j++) {
        matrix[0][j] = j;
      }
      for (var _i = 1; _i <= b.length; _i++) {
        for (var _j = 1; _j <= a.length; _j++) {
          var cost = b.charAt(_i - 1) === a.charAt(_j - 1) ? 0 : 1;
          matrix[_i][_j] = Math.min(matrix[_i - 1][_j] + 1, matrix[_i][_j - 1] + 1, matrix[_i - 1][_j - 1] + cost);
        }
      }
      var distance = matrix[b.length][a.length];
      var maxLength = Math.max(a.length, b.length);
      return 1 - distance / maxLength;
    }
  }, {
    key: "switchLibrary",
    value: function switchLibrary(libraryName) {
      var exactMatch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var maxDistance = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.5;
      if (exactMatch) {
        return _index["default"].library.history().then(function (histories) {
          var _iterator2 = _createForOfIteratorHelper(histories),
            _step2;
          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var history = _step2.value;
              if (_path["default"].basename(history) == libraryName) {
                return _index["default"].library["switch"](history);
              }
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }
          return null;
        });
      }
      return this.closestLibrary(libraryName).then(function (scores) {
        console.log("scoring table:", scores);
        // Find candidate with highest score
        var closest = Object.entries(scores).reduce(function (a, b) {
          return a[1] > b[1] ? a : b;
        });
        if (closest[1] > maxDistance) {
          return _index["default"].library["switch"](closest[0]);
        } else {
          throw new Error("No library found");
        }
      });
    }
  }]);
  return EagleApiExt;
}();
var _default = exports["default"] = EagleApiExt;